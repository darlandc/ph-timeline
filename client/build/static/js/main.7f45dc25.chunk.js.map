{"version":3,"sources":["client.js","components/Posts/Post.js","components/Posts/List.js","App.js","index.js"],"names":["client","ApolloClient","cache","InMemoryCache","link","HttpLink","uri","Button","styled","h1","section","button","props","primary","Post","className","style","post","title","course","href","url","console","log","PostList","query","gql","loading","error","data","allPosts","map","currentPost","App","require","polyfill","ReactDOM","render","document","getElementById"],"mappings":"kOAWeA,EARA,IAAIC,eAAa,CAC9BC,MAAO,IAAIC,gBACXC,KAAM,IAAIC,WAAS,CACjBC,IAAK,iD,iDCWHC,GAZQC,IAAOC,GAAV,iGAOKD,IAAOE,QAAV,wEAKEF,IAAOG,OAAV,uOAEI,SAAAC,GAAK,OAAIA,EAAMC,QAAU,gBAAkB,WAChD,SAAAD,GAAK,OAAIA,EAAMC,QAAU,QAAU,oBAsB/BC,EAZF,SAACF,GAAD,OACT,qBAAKG,UAAU,OAAOC,MAAO,CAAC,MAAS,OAAQ,UAAa,QAA5D,SACI,sBAAKD,UAAU,YAAf,UACI,oBAAIA,UAAU,aAAd,SAA4BH,EAAMK,KAAKC,QACvC,oBAAIH,UAAU,gCAAd,SAA+CH,EAAMK,KAAKC,QAC1D,mBAAGH,UAAU,YAAb,SAA0BH,EAAMO,OAAOD,QACvC,cAACX,EAAD,mBACA,mBAAGa,KAAMR,EAAMK,KAAKI,IAAKN,UAAU,oBC/B/CO,QAAQC,IAAI,GAEZ,IAoBeC,EApBE,kBACb,cAAC,IAAD,CAAOC,MAAOC,IAAF,gHAAZ,SAQK,YAA6B,IAA3BC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,KACf,OAAIF,EAAgB,4CAChBC,EAAc,yCAEXC,EAAKC,SAASC,KAAI,SAACC,GAAD,OACrB,cAAC,EAAD,CAAMf,KAAMe,WCd5BV,QAAQC,IAAI,GAEZ,IAsBeU,EAtBH,WACV,OACE,sBAAKlB,UAAU,MAAf,UACE,yBAAQA,UAAU,aAAlB,eACE,gDAEF,+BACA,cAAC,IAAD,CAAgBf,OAAQA,EAAxB,SACF,sBAAKe,UAAU,YAAf,UACE,qBAAKA,UAAU,gCAAf,SACE,mBAAGA,UAAU,eAAeK,KAAK,IAAjC,sDAEF,8BACE,cAAC,EAAD,iBClBRc,EAAQ,IAAeC,WACvBD,EAAQ,IAERE,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.7f45dc25.chunk.js","sourcesContent":["// client.js\nimport { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client'\n\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link: new HttpLink({\n    uri: 'https://api.producthunt.com/v2/api/graphql',\n  }),\n});\n\n\nexport default client;","import React from 'react';\nimport styled, { css } from 'styled-components';\n\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n\n// Create a Wrapper component that'll render a <section> tag with some styles\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n\nconst Button = styled.button`\n  /* Adapt the colors based on primary prop */\n  background: ${props => props.primary ? \"palevioletred\" : \"white\"};\n  color: ${props => props.primary ? \"white\" : \"palevioletred\"};\n\n  font-size: 1em;\n  margin: 1em;\n  padding: 0.25em 1em;\n  border: 2px solid palevioletred;\n  border-radius: 3px;\n`;\n\n\nconst Post = (props) => (\n    <div className=\"card\" style={{'width': '100%', 'marginTop': '10px'}}>\n        <div className=\"card-body\">\n            <h5 className=\"card-title\">{props.post.title}</h5>\n            <h6 className=\"card-subtitle mb-2 text-muted\">{props.post.title}</h6>\n            <p className=\"card-text\">{props.course.title}</p>\n            <Button>test</Button>\n            <a href={props.post.url} className=\"card-link\"></a>\n        </div>\n    </div>\n);\n\nexport default Post;\n\n","import React from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\n\nimport Post from './Post';\n\nconsole.log(2)\n\nconst PostList = () => (\n    <Query query={gql`\n        {\n            Post {\n                title\n            }\n        }\n    `}\n    >\n        {({loading, error, data}) => {\n            if (loading) return <p>Loading ...</p>;\n            if (error) return <p>Error :(</p>;\n            \n            return data.allPosts.map((currentPost) => (\n                <Post post={currentPost} />\n            ));\n        }}\n    </Query>\n);\n\nexport default PostList;","import './App.css';\n\nimport React, { Component } from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport client from './client';\nimport PostList from './components/Posts/List';\nimport './App.css';\n\nconsole.log(1)\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">ls\n        <p>Product Hunt</p>\n      </header>\n      <main>\n      <ApolloProvider client={client}>\n    <div className=\"container\">\n      <nav className=\"navbar navbar-dark bg-primary\">\n        <a className=\"navbar-brand\" href=\"#\">React and GraphQL - Sample Application</a>\n      </nav>\n      <div>\n        <PostList />\n      </div>\n    </div>\n  </ApolloProvider>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n\n// client_id required\tThe id of your application\n// client_secret required\tThe secret of your application\n// grant_type required","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nrequire(\"es6-promise\").polyfill();\nrequire(\"isomorphic-fetch\");\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}